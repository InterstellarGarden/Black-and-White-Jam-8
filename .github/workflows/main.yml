name: Build game
on:
  - push
  - pull_request
jobs:
  webgl:
    name: Build WebGL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-BWJamEight-WebGL
      - name: Build
        id: build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          customImage: 'unityci/editor:2020.3.32f1-webgl-1'
      - name: Push artifact
        id: push
        uses: actions/upload-artifact@v2
        with:
          name: Build-WebGL
          path: build
  windows:
    name: Build Windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-BWJamEight-Windows
      - name: Build
        id: build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          customImage: 'unityci/editor:ubuntu-2020.3.32f1-windows-mono-1.0.0'
      - name: Push artifact
        id: push
        uses: actions/upload-artifact@v2
        with:
          name: Build-Windows
          path: build
  mac:
    name: Build Mac
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-BWJamEight-Mac
      - name: Build
        id: build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneOSX
          customImage: 'unityci/editor:2020.3.32f1-mac-mono-1'
      - name: Push artifact
        id: push
        uses: actions/upload-artifact@v2
        with:
          name: Build-Mac
          path: build
  makerelease:
    name: Make Release if on Master
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
    needs:
      - webgl
      - windows
      - mac
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Download WebGL build
        uses: actions/download-artifact@v3
        with:
          name: Build-WebGL
          path: artifacts/webgl
      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: Build-Windows
          path: artifacts/windows
      - name: Download Mac build
        uses: actions/download-artifact@v3
        with:
          name: Build-Mac
          path: artifacts/mac
      - name: Upload WebGL Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/webgl
          asset_name: webgl.zip
          asset_content_type: application/zip
      - name: Upload Windows Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows
          asset_name: windows.zip
          asset_content_type: application/zip
      - name: Upload Mac Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/mac
          asset_name: mac.zip
          asset_content_type: application/zip
